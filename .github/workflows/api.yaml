# This is a basic workflow to help you get started with Actions

name: api-ci

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
    paths:
      - "apps/api/**"
  pull_request:
    branches: [master]
    paths:
      - "apps/api/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: Turborepo latest release.
        type: string
        default: "latest"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - 5432:5432
        env:
          DB_USER: uzuywgtk
          DB_PASSWORD: YkFpVRwlyJ_e-Ima40CmOXSPbNQx2e8u
          DB_HOST: drona.db.elephantsql.com
          DB_NAME: uzuywgtk
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: "postgres://uzuywgtk:YkFpVRwlyJ_e-Ima40CmOXSPbNQx2e8u@drona.db.elephantsql.com/uzuywgtk"

    # Steps represent a sequence of tasks that will be executed as part of the job
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm and turbo
        uses: pnpm/action-setup@v2.2.4
        run: npm i -g pnpm turbo@${{ inputs.version }}

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Prepare and install dependencies
        run: |
          turbo prune --scope=api && cd out && pnpm install --frozen-lockfile

      - name: Generate DB
        run: cd apps/api && pnpm exec prisma generate

      - name: Build
        run: cd out && pnpm run build

      - name: Test
        run: cd out/apps/api && pnpm test:ci

      # - name: Deploy
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: dist
