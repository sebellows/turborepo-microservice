{
  "$schema": "https://json.schemastore.org/tsconfig",
  "display": "Default",
  "compilerOptions": {
    // (For monorepo usage) Enable constraints that allow a TypeScript project to be used with project references.
    "composite": false,
    // interop between ESM and CJS modules. Recommended by TS
    "esModuleInterop": true,
    // error out if import and file system have a casing mismatch. Recommended by TS
    "forceConsistentCasingInFileNames": true,
    // Ensure that each file can be safely transpiled without relying on other imports.
    "isolatedModules": true,
    // use Node's module resolution algorithm, instead of the legacy TS one
    "moduleResolution": "node",
    // `tsdx build` ignores this option, but it is commonly used when type-checking separately with `tsc`
    "noEmit": true,
    "noImplicitAny": false,
    // noUnused* overlap with @typescript-eslint/no-unused-vars, can disable if duplicative
    "noUnusedLocals": false,
    "noUnusedParameters": false,
    "preserveWatchOutput": true,
    // significant perf increase by skipping checking .d.ts files, particularly those in node_modules. Recommended by TS
    "skipLibCheck": true,
    // stricter type-checking for stronger correctness. Recommended by TS
    "strict": true,

    // Sourcemap-specific settings
    //
    // Generate .d.ts files from TypeScript and JavaScript files in your project.
    "declaration": true,
    // Create sourcemaps for d.ts files.
    "declarationMap": true,
    // Include source code in the sourcemaps inside the emitted JavaScript.
    "inlineSources": false
  },
  "exclude": ["node_modules"]
}
